package shop.local.domain;

import java.io.IOException;
import java.util.Iterator;
import java.util.Vector;

//import shop.local.exceptions.ArtikelExistiertBereitsException;
import shop.local.exceptions.KundeExistiertBereitsException;
import shop.local.persistence.FilePersistenceManager;
import shop.local.persistence.PersistenceManager;
//import shop.local.valueobjects.Artikel;
import shop.local.valueobjects.Kunde;

public class KundenVerwaltung {

	
	// Verwaltung der Kunden
	private Vector kundenListe = new Vector();
	// Persistenz-Schnittstelle
	private PersistenceManager pm = new FilePersistenceManager(); 
	// Objekt Kunde 
	private static Kunde KundeBesitzer = new Kunde();
		
	public void liesDaten(String datei) throws IOException{
		pm.openForReading(datei);
		
		Kunde einKunde;
		do{
			// Kunde-Objekt einlesen...
			einKunde = pm.ladeKunde();
			if(einKunde!=null){
				// Kunde hinzufuegen...
				try{
				einfuegen(einKunde);
				}catch(KundeExistiertBereitsException e){
					
				}
			}
		}while(einKunde!=null);
		pm.close();
	}
	
	public void schreibeKunden(String datei) throws IOException  {
		// PersistenzManager fuer Schreibvorgaenge oeffnen
		pm.openForWriting(datei);

		if (!kundenListe.isEmpty()) {
			Iterator<Kunde> iter = kundenListe.iterator();
			while (iter.hasNext()) {
				Kunde k = (Kunde) iter.next();
				pm.speichereKunde(k);				
			}
		}			
		
		// Persistenz-Schnittstelle wieder schlieﬂen
		pm.close();
	}
	
	public void einfuegen(Kunde einKunde) throws KundeExistiertBereitsException {
		if (kundenListe.contains(einKunde))
			throw new KundeExistiertBereitsException(einKunde, " - in 'einfuegen()'");

		kundenListe.add(einKunde);
	}
	
	//Kundensuche
	public Vector<Kunde> sucheKunde(String titel) {
		Vector<Kunde> ergebnis = new Vector<Kunde>();
		
		Iterator<Kunde> iter = kundenListe.iterator();
		while (iter.hasNext()) {
			Kunde kunde = (Kunde) iter.next();
			if ( kunde.getVorname().equals(titel) || kunde.getNachname().equals(titel) || kunde.getBenutzername().equals(titel)) {
				ergebnis.add(kunde);
			}
		}
		
		return ergebnis;
	}
	
	public Vector<Kunde> getKunde() {
		// Gib Kundenliste in Vector zurueck.
		return kundenListe;
	}

	public void setVorname(String neuerVorname) {
		KundeBesitzer.setVorname(neuerVorname);
		
	}

	// eine Kunde,die erfolgreich eingelogt hat.
	public void besitzKunde(Kunde k) {
		KundeBesitzer = k;
		
	}

	public void setNachname(String neuerNachname) {
		KundeBesitzer.setNachname(neuerNachname);
		
	}

	public void setPasswort(String neuesPasswort) {
		KundeBesitzer.setPasswort(neuesPasswort);
		
	}

	public void setStrasseUndHausnummer(String neueAddresse) {
		KundeBesitzer.setStrasseUndHausnummer(neueAddresse);
		
	}
	
	
}
